package gui;

import controller.Controller;
import model.Giudice;
import model.Hackathon;
import model.Organizzatore;
import model.Team;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

public class HackathonList {
    private Controller controller;
    private JFrame frame;

    private JList hackathonList;
    private JPanel btnPanel;
    private JPanel root;

    // Pulsanti giudici
    private JButton visualizzaTeam;
    //

    // Pulsanti organizzatore
    private JButton invitaGiudice;
    private JButton creaHackathon;
    //

    private JScrollPane scrollPaneBar1;

    public HackathonList(ArrayList<Hackathon> hackathons, Controller c, JFrame f) {
        controller = c;
        frame = f;

        hackathonList.setModel(new DefaultListModel<String>());

        refreshLocalUIHackathonList();

        if (controller.getCurrentUser() instanceof Giudice) {
            visualizzaTeam = new JButton("Visualizza Teams");
            visualizzaTeam.addActionListener(e -> {
                String s = "";

                if (hackathonList.getSelectedValue() != null) {
                    ArrayList<Team> teams = controller.getLocalTeamsInHackathon(hackathonList.getSelectedValue().toString());
                    for (Team t : teams) {
                        s += t.getNome() + "\n";
                    }
                    JOptionPane.showMessageDialog(frame, s);
                } else {
                    JOptionPane.showMessageDialog(frame, "Nessun hackathon selezionato!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            btnPanel.add(visualizzaTeam, new com.intellij.uiDesigner.core.GridConstraints());
        } else if (controller.getCurrentUser() instanceof Organizzatore) {
            invitaGiudice = new JButton("Invita Giudice");
            creaHackathon = new JButton("Crea Hackathon");

            invitaGiudice.addActionListener(e -> {
                if (hackathonList.getSelectedValue() != null) {
                    if (controller.inviteJudgeToHackathon("johnlemon@example.com", hackathonList.getSelectedValue().toString()))
                        JOptionPane.showMessageDialog(frame, "Giudice invitato!");
                    else
                        JOptionPane.showMessageDialog(frame, "Si e' verificato un errore!");
                } else {
                    JOptionPane.showMessageDialog(frame, "Nessun hackathon selezionato!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });

            creaHackathon.addActionListener(e -> {
                JDialog frame = new JDialog(f, "Crea Hackathon");
                frame.setType(Frame.Type.UTILITY);
                frame.setSize(360, 240);
                frame.setContentPane(new CreaHackathon(f, controller, this).$$$getRootComponent$$$());

                frame.setVisible(true);

            });

            btnPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2));

            btnPanel.add(creaHackathon,
                    new com.intellij.uiDesigner.core.GridConstraints(
                            0, 0, 1, 1,
                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                            com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                            null, null, null
                    )
            );

            btnPanel.add(invitaGiudice,
                    new com.intellij.uiDesigner.core.GridConstraints(
                            0, 1, 1, 1,
                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                            com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                            null, null, null
                    )
            );
        }
    }

    public void refreshLocalUIHackathonList()
    {
        for (Hackathon h : controller.getLocalAllHackathons())
            ((DefaultListModel<String>) hackathonList.getModel()).addElement(h.getTitolo());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        btnPanel = new JPanel();
        btnPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        root.add(btnPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(-1, 32), null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        root.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        hackathonList = new JList();
        scrollPane1.setViewportView(hackathonList);
        final JLabel label1 = new JLabel();
        label1.setText("HACKATHON");
        root.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
